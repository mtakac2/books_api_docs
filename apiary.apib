FORMAT: 1A
HOST: http://www.localhost:3000

# Books API
Notes API is a *short texts saving* service similar to its physical paper presence on your table.

# Group Books

## /books{?page, per_page}
### GET
Get a list of all books.

+ Parameters
    + page = `1` (optional, integer, `12`) ... Page number
    + per_page = `10` (optional, integer, `25`) ... Number of records per page

+ Response 200 (application/json)
    + Body

            {
                [
                    { "id": "1", "title": "Catcher in rye", "author": "J. D. Salinger" },
                    { "id": "2", "title": "Dracula", "author": "B. Stoker" },
                    { "id": "3", "title": "The black obelisk", "author": "E. M. Remarque" }
                ]
            }

### POST
Create new book.

+ Request (application/json)
    + Body

            {
                { "title": "Love is just a word", "author": "J. M. Simmel" }
            }

+ Response 201 (application/json)
    + Body

            {
                "id": "4", "title": "Love is just a word", "author": "J. M. Simmel"
            }


## /books/{id}
### GET
Get a book details.

+ Parameters
    + id (required, string, `1`) ... Book ID

+ Response 200 (application/json)
    + Body

            {
                "id": "1", "title": "Catcher in rye", "author": "J. D. Salinger"
            }

### PATCH
Update a book.

+ Parameters
    + id (required, string, `1`) ... Book ID

+ Request (application/json)
    + Body

            {
                "title": "Catcher in the rye"
            }

+ Response 200 (application/json)
    + Body

            {
                "id": "1", "title": "Catcher in the rye", "author": "J. D. Sallinger"
            }

### DELETE
Delete a book

+ Parameters
    + id (required, string, `1`) ... Book ID

+ Response 204
